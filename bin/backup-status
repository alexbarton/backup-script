#!/bin/bash
#
# backup-script system for cloning systems using rsync
# Copyright (c)2008-2013 Alexander Barton, alex@barton.de
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# Please read the file COPYING, README and AUTHORS for more information.
#

NAME=`basename $0`
CONF_D="/etc/backup-script.d"
QUICK=0

export LC_ALL=C

declare -i count=0
declare -i snapshots=0

# Default settings, can be overwritten in backup-script.conf:
default_target=""
default_generations=0

Check_Size() {
	# $1: directory
	# $2: padding

	if [ "$QUICK" = "0" ]; then
		size=`du -sh "$1" | cut -f1`
		echo "$2  - Size:" $size
	fi
}

Check_Stamp() {
	# $1: stamp file
	# $2: padding

	if [ -f "$1" ]; then
		last=`stat "$1" | grep "^Modify: " \
		  | cut -d':' -f2- | cut -d. -f1`
		[ -n "$last" ] && echo "$2  - Date:" $last
		unset code
		source "$1"
		case "$code" in
		  0)	txt=", OK"; ;;
		  24)	txt=", files changed during backup"; ;;
		  *)	txt=""
		esac
		[ -n "$code" ] && echo "$2  - Result code: $code$txt"
	else
		echo "$2  - No timestamp recorded!? Backup aborted?"
	fi
}

if [ "$1" == "-q" ]; then
	QUICK=1
	shift
fi

case "$1" in
    "-"*)
	echo "Usage: $NAME [-p] [<system> [<system> [...]]]"
	exit 1
	;;
esac

if [ $# -ge 1 ]; then
	for s in $@; do
		if [ ! -r "${CONF_D}/$s" ]; then
			echo "$NAME: Can' read \"${CONF_D}/$s\"!"
			exit 1
		fi
		sys="$sys ${CONF_D}/$s"
	done
else
	sys=${CONF_D}/*
fi

[ -r "${CONF_D}/backup-script.conf" ] && source "${CONF_D}/backup-script.conf"

for f in $sys; do
	[ -r "$f" -a -f "$f" ] || continue

	fname=`basename $f`
	case "$fname" in
		"backup-script.conf"|*.sh)
			continue
			;;
	esac

	# Set global defaults
	system="$fname"
	target="$default_target"
	generations="$default_generations"

	# Read in system configuration file
	source "$f"

	# Validate configuration
	[ "$system" = "localhost" -o "$system" = "127.0.0.1" ] && local=1

	destdir="$target"
	target="$target/$system"

	[ -d "$target" ] || continue

	# System name
	[ "$system" = "$fname" ] && echo "$fname" || echo "$fname [$system]"

	# System target directory
	echo "- Target: $target"

	if [ $generations -gt 0 ]; then
		for s in $target/[0-9]*-[0-9]*; do
			echo "  - Snapshot: $s"
			Check_Size "$s" "  "
			Check_Stamp "$s/.stamp" "  "
			snapshots=$snapshots+1
		done
	else
		# Timestamp and result code
		Check_Size "$s"
		Check_Stamp "$target/.stamp"
		snapshots=$snapshots+1
	fi

	count=$count+1
	echo
done

if [ $count -lt 1 ]; then
	echo "No backups found!"
	exit 1
fi
[ $count -eq 1 ] && sc="" || sc="s"
[ $snapshots -eq 1 ] && ss="" || ss="s"
echo "$count system backup$sc found, $snapshots snapshot$ss."

# -eof-
